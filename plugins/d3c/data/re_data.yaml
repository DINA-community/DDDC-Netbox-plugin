# Regex collection for the attribute 'Device Family', grouped by manufacturer names
Device Family:
  # Regex for a general manufacturer / left blank intentionally
  General: ""
  # Regex for manufacturer 'Siemens', e.g. 'SCALANCE', 'SIPLUS'
  Siemens: "\\b(?:SIMATIC|simatic|SCALANCE|scalance|SIMOTION|simotion|SIPLUS|siplus|LOGO!|logo!|RUGGEDCOM|ruggedcom)\\b"
  # Regex for manufacturer 'Phoenix Contact', e.g. 'PLCnext Control', 'Axioline F', 'Axioline P'
  Phoenix Contact: "\\b(PLCnext Control)|(Axioline [FP])|(Inline)|(Remote Field Controller)\\b"
  # Regex for manufacturer 'Omron', e.g. 'CP2', 'CRT', 'NJ'
  Omron: "\\b(?i)(?:CJ2|CJ|SPS|NX|NJ|RT\\-Serie|CP2|CRT|DRT)\\b"
  # Regex for manufacturer 'ABBt', e.g. 'AC500'
  ABB: "\\bAC500\\b"
# Regex collection for the attribute 'Device Type', grouped by manufacturer names
Device Type:
  # Regex for a general manufacturer / left blank intentionally
  General: ""
  # Regex list for manufacturer 'Siemens', grouped by device series
  Siemens:
    # Regex for 'S7-300' series, e.g. 'S7-300 SM 326 10F-DO' or 'S7-300 SM 326F DI24'
    - "\\b(S7-300 (CPU|SM) ?3[0-9]{2}(-[1-9])?( PN/DP)?)\\b"
    # Regex for 'S7-1200' series, e.g. 'S7-1200 CPU 1215C'
    - "\\b(S7-1200[F]? CPU 12[0-9]{2}[A-Z]{0,2})\\b"
    # Regex for 'S7-1500' series, e.g. 'S7-1500 CPU 1516-3'
    - "\\b(S7-1500[TFHR]{0,2} CPU 15[0-9]{2}[TFHR]{0,2}(-[1-9]( ?PN)?)?)\\b"
    # Regex for 'XB-/XR-' series, e.g. 'XB-200 managed XB213-3' or 'XR-100WG unmanaged XR108-2PoE WG'
    - "\\b(X[A-Z]{0,2}-[0-9]00(EEC|IRT|WG)? (((un)?managed)|(compact mainstream)|(rack (mainstream)|(high-end))) X[A-Z]{0,2}[0-9]{3}[A-Z]?( ?(PoE|EEC|IRT|G|FE|WG))?)\\b"
    # Regex for 'S7' series, e.g. 'S7 SM 332' or 'S7 SM 321'
    - "\\b(S7 SM 3[0-9]{2})|(NET CSM (12|3)[0-9]{2})\\b"
    # Regex for generic 'Siemens' series as used in CSAF, e.g. 'S7-1500 CPU' or 'S7-400 CPU devices'
    - "\\b((S7-[1-9][0-9]{2,3})|(ET[1-9][0-9]{2})(.*(family|devices|CPUs?))?)\\b"
  # Regex list for manufacturer 'Phoenix Contact', grouped by device series
  Phoenix Contact:
    # Regex for 'AXC F' series, e.g. 'AXC F 3152' or 'AXC F 1152'
    - "\\b(A[FX]C F [1-9][0-9]{3})\\b"
    # Regex for 'AXL F' series, e.g. 'AXL F BK EIP XC' or 'AXL P BK PN AF'
    - "\\b(AXL [FP] BK( [A-Z0-9]{2,3}){,3})\\b"
    # Regex for 'RFC' series, e.g. 'RFC 4072R'
    - "\\b(RFC [1-9][0-9]{3}[A-Z]?)\\b"
    # Regex for 'IBS IL' series, e.g. 'IBS IL 24 BK-LK/45-2MBD'
    - "\\b(IBS IL [1-9][0-9] BK([ -][A-Z0-9/]{2,5}){2,4})\\b"
    # Regex for 'IL' series, e.g. 'IL CO BK-XC-PAC' or 'IL ETH BK DI8 DO4 2TX-XC-PAC'
    - "\\b(I[LP] [A-Z0-9]{2,3} BK( [A-Z0-9]{2,3}){0,2}([ /-]([A-Z0-9]{2,3}(-[A-Z0-9]{2,3}){0,2}))?)\\b"
  # Regex for manufacturer 'Omron', e.g. 'CJ2H-CPU65-EIP', 'CP1L-M30DT-D', 'NJ101-9020'
  Omron: "\\b[CDNR][a-zA-Z][A-Z0-9]{2,3}-[A-Z0-9]{4,7}(-[0-9A-Z]{1,3})?\\b"
  # Regex for manufacturer 'ABB', e.g. 'PM5630-2ETH' or 'TB541-ETH'
  ABB: "\\b[ACDPT][BCIMU][1-9][0-9]{2,3}(-[a-zA-Z0-9]{1,6}){0,3}( \\(limited\\))?\\b"
# Regex collection for the attribute 'Article Number', grouped by manufacturer names
Article Number:
  # Regex for a general manufacturer / left blank intentionally
  General: ""
  # Regex list for manufacturer 'Siemens'
  Siemens:
    # Regex for Siemens article number, e.g. '6GK5108-2RS00-2FC2 '
    - "\\b6[A-Z]{2}[0-9]\\s?[0-9]{3}-[0-9][A-Z]{2}[0-9]{2}(-[0-9][A-Z]{2}[0-9])?\\b"
    # Regex for shortened Siemens article number, e.g. '6GK1162-3AA00'
    - "\\b6[A-Z]{2}[0-9]\\s?[0-9]{3}-[0-9][A-Z]{2}[0-9]{2}\\b"
  # Regex for manufacturer 'Phoenix Contact' e.g. '2862000'
  Phoenix Contact: "\\b[0-9]{7}\\b"
  # Regex for manufacturer 'Omron' e.g. 'CJ2H-CPU65-EIP' or 'CP1L-M30DT-D'
  Omron: "\\b[CDNR][a-zA-Z][A-Z0-9]{2,3}-[A-Z0-9]{4,7}(-[0-9A-Z]{1,3})?\\b"
  # Regex for manufacturer 'ABB' e.g. '1SAP131000R0378'
  ABB: "\\b1[A-Z]{3}[0-9]{6}R[0-9]{4}\\b"
# Regex collection for the attribute 'Version'
Version:
  # Regex for a general manufacturer
  General:
    # Regex for a default version number
    - "[Vv]\\s?\\d+(\\.\\d+)*"
    # Regex for a broker version number from nmap scripts
    - "[Vv]\\s*\\d+(\\s+\\d+)*"