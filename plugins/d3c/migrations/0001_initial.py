# Generated by Django 4.2.5 on 2023-10-24 06:44

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0098_webhook_custom_field_data_webhook_tags'),
        ('dcim', '0181_rename_device_role_device_role'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('ipam', '0067_ipaddress_index_host'),
    ]

    operations = [
        migrations.CreateModel(
            name='XGenericUri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('object_id', models.PositiveBigIntegerField()),
                ('namespace', models.CharField(max_length=1000)),
                ('uri', models.CharField(max_length=1000)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'dcim'), ('model', 'devicetype')), models.Q(('app_label', 'd3c'), ('model', 'software')), _connector='OR')), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'XGenerixUris',
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50)),
                ('is_firmware', models.BooleanField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('cpe', models.CharField(blank=True, max_length=1000, null=True)),
                ('purl', models.CharField(blank=True, max_length=1000, null=True)),
                ('sbom_urls', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000, null=True), blank=True, null=True, size=None)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'Software',
            },
        ),
        migrations.CreateModel(
            name='ProductRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('source_id', models.PositiveBigIntegerField()),
                ('category', models.CharField(max_length=30)),
                ('destination_id', models.PositiveBigIntegerField()),
                ('destination_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'dcim'), ('model', 'device')), models.Q(('app_label', 'd3c'), ('model', 'software')), _connector='OR')), on_delete=django.db.models.deletion.CASCADE, related_name='destinationProduct', to='contenttypes.contenttype')),
                ('source_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'dcim'), ('model', 'device')), models.Q(('app_label', 'd3c'), ('model', 'software')), _connector='OR')), on_delete=django.db.models.deletion.CASCADE, related_name='sourceProduct', to='contenttypes.contenttype')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'ProductRelationship',
            },
        ),
        migrations.CreateModel(
            name='Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=10)),
                ('data', models.JSONField(blank=True, max_length=1000)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'Mappings',
            },
        ),
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('filename', models.CharField(max_length=1000)),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hashes', to='d3c.software')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'Hashes',
            },
        ),
        migrations.CreateModel(
            name='FileHash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('algorithm', models.CharField(max_length=1000)),
                ('value', models.CharField(max_length=1000)),
                ('hash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_hashes', to='d3c.hash')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name_plural': 'FileHashes',
            },
        ),
        migrations.CreateModel(
            name='DeviceFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('source', models.CharField(max_length=50)),
                ('confidence', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('device_name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('site', models.CharField(blank=True, max_length=50, null=True)),
                ('rack', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('device_role', models.CharField(blank=True, max_length=50, null=True)),
                ('is_safety_critical', models.CharField(blank=True, max_length=50, null=True)),
                ('network_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('transport_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('application_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('port', models.CharField(blank=True, max_length=50, null=True)),
                ('mac_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_router', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=50, null=True)),
                ('oui', models.CharField(blank=True, max_length=50, null=True)),
                ('part_number', models.CharField(blank=True, max_length=50, null=True)),
                ('device_family', models.CharField(blank=True, max_length=50, null=True)),
                ('article_number', models.CharField(blank=True, max_length=50, null=True)),
                ('hardware_version', models.CharField(blank=True, max_length=50, null=True)),
                ('hardware_cpe', models.CharField(blank=True, max_length=50, null=True)),
                ('software_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_firmware', models.CharField(blank=True, max_length=50, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('finding_status', models.CharField(default='NEW', max_length=6)),
                ('has_predicted_device', models.BooleanField(default=False)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_findings', to='dcim.device')),
                ('predicted_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predicted_device_findings', to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DDDCAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('initialized', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommunicationFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('source', models.CharField(max_length=50)),
                ('source_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('destination_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('destination_port', models.CharField(blank=True, max_length=50, null=True)),
                ('network_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('transport_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('application_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('finding_status', models.CharField(default='NEW', max_length=6)),
                ('has_predicted_src_device', models.BooleanField(default=False)),
                ('has_predicted_dst_device', models.BooleanField(default=False)),
                ('has_2_predicted_devices', models.BooleanField(default=False)),
                ('predicted_dst_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predicted_dst_device', to='dcim.device')),
                ('predicted_src_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predicted_src_device', to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('target_port', models.IntegerField(blank=True, null=True)),
                ('network_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('transport_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('application_protocol', models.CharField(blank=True, max_length=50, null=True)),
                ('source_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sourceForCommunications', to='dcim.device')),
                ('source_ip_addr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sourceIPAddress', to='ipam.ipaddress')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('target_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targetForCommunications', to='dcim.device')),
                ('target_ip_addr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targetIPAddress', to='ipam.ipaddress')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
